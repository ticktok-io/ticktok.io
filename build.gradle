buildscript {
    ext.kotlin_version = '1.3.0'

    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:2.0.5.RELEASE")
        classpath("org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version")
    }
}

apply plugin: 'java'
apply plugin: 'kotlin'
apply plugin: 'idea'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'


bootJar {
    baseName = 'ticktok'
    version =  '0.1.2'
}

sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
    mavenCentral()
    jcenter()
}

dependencies {
    compileOnly "org.projectlombok:lombok:1.16.20"
    annotationProcessor "org.projectlombok:lombok:1.16.20"

    // Spring
    compile("org.springframework.boot:spring-boot-starter-web") {
        exclude module: "spring-boot-starter-tomcat"
    }
    compile "org.springframework.boot:spring-boot-starter-actuator"
    compile "org.springframework.boot:spring-boot-starter-security"
    compile "org.springframework.boot:spring-boot-starter-data-mongodb"
    compile "org.springframework.boot:spring-boot-starter-amqp"
    compile "org.eclipse.jetty:jetty-webapp:9.+"
    compile "org.eclipse.jetty:jetty-jsp:9.+"

    compile "org.hibernate.validator:hibernate-validator:6.0.13.Final"
    compile "javax.validation:validation-api:2.0.1.Final"

    compile "com.google.code.gson:gson:2.8.2"

    //Swagger
    compile "io.springfox:springfox-swagger2:2.6.1"
    compile "io.springfox:springfox-swagger-ui:2.6.1"


    // ======================= Tests ==========================

    testCompile "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"

    // JUnit 5
    testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:5.1.0"
    testImplementation "org.junit.jupiter:junit-jupiter-api:5.1.0"

    testCompile "org.hamcrest:hamcrest-all:1.3"
    testCompile "org.mockito:mockito-core:2.15.0"

    //Spring
    testCompile "org.springframework.boot:spring-boot-starter-test"

    //Selenium
    testCompile 'org.seleniumhq.selenium:selenium-java:3.14.0'
    testCompile 'org.seleniumhq.selenium:selenium-support:3.13.0'

    //Other
    testCompile "org.apache.httpcomponents:httpclient:4.5.5"
    testCompile "org.apache.httpcomponents:fluent-hc:4.5.5"



}
compileKotlin {
    kotlinOptions {
        jvmTarget = "1.8"
    }
}
compileTestKotlin {
    kotlinOptions {
        jvmTarget = "1.8"
    }
}

task build_dashboard() {
    doLast {
        exec {
            workingDir "dashboard"
            commandLine "npm", "install"
        }
        exec {
            workingDir "dashboard"
            environment "PUBLIC_URL", ' '
            commandLine "npm", "run", "build"
        }
    }
}

task copy_dashboard(type: Copy) {
    from "dashboard/build"
    into "src/main/resources/public"
}

compileJava {
    dependsOn copy_dashboard
}

task cleanDashboard(type: Delete) {
    delete "$projectDir/src/main/resources/public"
}

clean {
    dependsOn cleanDashboard
}

test {
    environment "DASHBOARD_URL", "http://localhost:8080"
    environment "SELF_DOMAIN", "http://localhost:8080"
    useJUnitPlatform()
}



